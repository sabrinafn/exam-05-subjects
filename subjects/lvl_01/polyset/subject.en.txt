Assignment name  : polyset
Expected files   : searchable_array_bag.cpp, searchable_array_bag.hpp,
searchable_tree_bag.cpp, searchable_tree_bag.hpp, set.cpp, set.hpp
--------------------------------------------------------------------------------

In this directory, you will find various classes:
 - bag: an abstract class representing a bag
 - searchable_bag: an abstract class representing a bag with the ability to search within it.
 - array_bag: an implementation of a bag using an array as the underlying data structure.
 - tree_bag: an implementation of a bag using a binary search tree as the underlying data structure.

If you don't know what a set or a bag is, you can read the attached file: sets_and_bags.en.txt

#### First part ####

 - Since a bag without a searching function is not very useful, implement two classes,
 searchable_array_bag and searchable_tree_bag, that will inherit from array_bag and tree_bag,
 respectively, and implement the searchable_bag abstract class.

#### Second part ####

 - Implement the class set that will wrap a searchable_bag and turn it into a set.
 - In this directory, you will find a main file that must compile with your code.
 - All your classes should follow the orthodox canonical form. Don't forget the consts.
 - The optimization of your code is not important in this exercise.
